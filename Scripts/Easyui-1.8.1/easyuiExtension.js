function formatDatebox(value) { if (value == null || value == "") { return "" } var dt = parseToDate(value); return dt.format("yyyy-MM-dd") } function formatDateBoxFull(value1) { if (value1 == null || value1 == "") { return "" } var dt1 = parseToDate(value1); return dt1.format("yyyy-MM-dd hh:mm:ss") } function parseToDate(value) { if (value == null || value == "") { return undefined } var dt; if (value instanceof Date) { dt = value } else { if (!isNaN(value)) { dt = new Date(value) } else { if (value.indexOf("/Date") > -1) { value = value.replace(/\/Date\((-?\d+)\)\//, "$1"); dt = new Date(); dt.setTime(value) } else { if (value.indexOf("/") > -1) { dt = new Date(Date.parse(value.replace(/-/g, "/"))) } else { dt = new Date(value) } } } } return dt } Date.prototype.format = function (format) { var o = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), "S": this.getMilliseconds() }; if (/(y+)/.test(format)) { format = format.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)) } for (var k in o) { if (new RegExp("(" + k + ")").test(format)) { format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length)) } } return format };